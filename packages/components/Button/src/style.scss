$colors: (
  'primary': #1BA7F1,
  'secondary': #4a667b,
  'info': #008DDA,
  'success': #40b64f,
  'warning': #FBA834,
  'error': #FB6D48
);
$sizes: 
  'sm' 2rem .75rem .375rem .825rem,
  'md' 2.5rem .875rem .375rem 1rem,
  'lg' 3rem 1rem .375rem 1.125rem;
$disabledColor: #979797;

.pui-button {
  font-family: inherit;
  font-weight: 600;
  box-sizing: border-box;
  outline: none;
  box-shadow: none;
  border:0;
  border-radius: .375rem;
  cursor: pointer;
  position: relative;
  display: flex;
  gap:.5rem;
  align-items: center;
  background-color: transparent;
  color: inherit;
  justify-content: center;
  text-decoration: none;
  overflow: hidden;
  line-height: 1;
  z-index: 1;
  transition: all .3s;
  &::before {
    content: '';
    transition: all .3s;
    position: absolute;
    left:0;
    top:0;
    right:0;
    bottom:0;
    z-index:-1;
  }
  .pui-button-label {
    white-space: nowrap;
  }
  svg {
    flex-shrink: 0;
    width: 1.37em;
    height: 1.37em;
  }
  &:not(.pui-button-disabled, .pui-button-loading):hover::before {
    background-color: rgba(200,200,200, .1);
  }

  &.pui-button-rounded {
    border-radius: 100px;
  }
  &.pui-button-loading {
    cursor: default;
    opacity: 0.75;
    .pui-button-loader {
      display: flex;
      justify-content: center;
      align-items: center;
      &.pui-button-loader-overlay {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
      }
      &.pui-button-loader-overlay ~ * {
        color: transparent;
      }

    }
  }
  &.pui-button-disabled {
    cursor: not-allowed;
    opacity: .75;
    &.pui-button-loading {
      .pui-button-loader {
        color: $disabledColor;
        svg {
          stroke: $disabledColor;
        }
      }
    }
  }

  @each $btnSize, $btnHeight, $btnFont, $btnPaddingY, $btnPaddingX in $sizes {
    &.pui-button-#{$btnSize} {
      height: $btnHeight;
      font-size: $btnFont;
      padding:$btnPaddingY $btnPaddingX;
    }
  }

  &.pui-button-solid {
    @each $colorName, $colorHex in $colors {
      &.pui-button-#{$colorName} {
        border: 1px solid var(--pui-#{$colorName}, $colorHex);
        background-color: var(--pui-#{$colorName}, $colorHex);
        color: #fafafa;
        &:hover {
          color: #fff;
        }
        &.pui-button-disabled {
          color: $disabledColor;
          border-color: transparent;
          background-color: rgba($disabledColor, .3);
        }
        &:not(.pui-button-disabled):hover::before {
          background-color: rgba(100,100,100, .1);
        }
        &.pui-button-loading {
          .pui-button-loader {
            color:#fff;
            svg {
              stroke: #fff;
            }
          }
        } 
      }
    }
  }

  &.pui-button-outlined {
    @each $colorName, $colorHex in $colors {
      &.pui-button-#{$colorName} {
        border: 1px solid var(--pui-#{$colorName}, $colorHex);
        color: var(--pui-#{$colorName}, $colorHex);
        &.pui-button-disabled {
          border-color: $disabledColor;
          color: $disabledColor;
        }
        &.pui-button-loading {
          .pui-button-loader {
            color:var(--pui-#{$colorName}, $colorHex);;
            svg {
              stroke: var(--pui-#{$colorName}, $colorHex);;
            }
          }
        } 
      }
    }
  }

  &.pui-button-text {
    @each $colorName, $colorHex in $colors {
      &.pui-button-#{$colorName} {
        border: 1px solid transparent;
        color: var(--pui-#{$colorName}, $colorHex);
        &.pui-button-disabled {
          color: $disabledColor;
        }
        .pui-button-loader {
          color:var(--pui-#{$colorName}, $colorHex);;
          svg {
            stroke: var(--pui-#{$colorName}, $colorHex);;
          }
        }
      }
    }
  }

  &.pui-button-disabled.pui-button-loading {
    .pui-button-loader {
      color: $disabledColor;
      svg {
        stroke: $disabledColor !important;
      }
    }
  }
  
}